cmake_minimum_required(VERSION 2.8)

set(PY_LIB_NAME "ext3DLBPpy")

set(GCC_COVERAGE_COMPILE_FLAGS "-std=c++14 -O2 -Wp,-w")
set( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}" )

# Force release build by default, speed is of the essence
if ( NOT CMAKE_BUILD_TYPE )
  set( CMAKE_BUILD_TYPE Release )
endif()

find_package(PythonInterp)

if (PYTHONINTERP_FOUND)
  if (UNIX AND NOT APPLE)
    if (PYTHON_VERSION_MAJOR EQUAL 3)
        find_package(Boost COMPONENTS python${PYTHON_VERSION_SUFFIX} numpy${PYTHON_VERSION_SUFFIX})
        find_package(PythonInterp 3)
        find_package(PythonLibs 3 REQUIRED)
    else()
        find_package(Boost COMPONENTS python numpy)
        find_package(PythonInterp)
        find_package(PythonLibs REQUIRED)
    endif()
  else()
    set(CMAKE_MACOSX_RPATH ON )
    if (PYTHON_VERSION_MAJOR EQUAL 3)
        find_package(Boost COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR} numpy${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
        find_package(PythonInterp 3)
        find_package(PythonLibs 3 REQUIRED)
    else()
        find_package(Boost COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR} numpy${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
        find_package(PythonInterp)
        find_package(PythonLibs REQUIRED)
    endif()
  endif()
else()
    message("Python not found")
endif()

#find_package(NumPy REQUIRED)
include("${CMAKE_CURRENT_SOURCE_DIR}/FindNumpy.cmake")

include_directories(. ../include ${Boost_INCLUDE_DIRS} ${PYTHON_INCLUDE_DIRS} ${PYTHON_NUMPY_INCLUDE_DIR})
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)

add_library(${PY_LIB_NAME} SHARED ext3DLBPpy.cpp)
set_target_properties(${PY_LIB_NAME} PROPERTIES PREFIX "")
if(WIN32)
  # Ensure the output binary is called ext3DLBPpy.pyd on Windows (not ext3DLBPpy.dll)
  set_target_properties(${PY_LIB_NAME} PROPERTIES SUFFIX ".pyd")
endif(WIN32)
if(APPLE)
    set_target_properties(${PY_LIB_NAME} PROPERTIES SUFFIX ".so")
endif(APPLE)
message("Linked libraries: ${PYTHON_LIBRARIES} ${Boost_LIBRARIES}")
target_link_libraries(${PY_LIB_NAME} ${PYTHON_LIBRARIES} ${Boost_LIBRARIES})
