/*  =========================================================================
        Author: Leonardo Citraro
        Company:
        Filename: test_functional.cpp
        Last modifed:   06.04.2017 by Leonardo Citraro
        Description:    Functional test
    
        =========================================================================
    
        =========================================================================
    */
    #include "ext3DLBP.hpp"
    #include <iostream>
    #include <string>
    #include <array>
    #include <cassert>
    
    using namespace ext3DLBP;
    
    template<typename T, size_t N>
    bool check(const std::string& test, const Array1D<T,N>& output, const Array1D<T,N>& truth) {
        if( output==truth ) {
            std::cout << test << " passed!\n";
            return true;
        } else {
            std::cout << test << " failed!\n";
            std::cout << "output: [";
            for(const auto& e:output)
                std::cout << e << ",";
            std::cout << "]\n";
            std::cout << "truth:  [";
            for(const auto& e:truth)
                std::cout << e << ",";
            std::cout << "]\n";
            return false;
        }
    }
    template<typename T>
    bool check(const std::string& test, const T output, const T truth) {
        if( output==truth ) {
            std::cout << test << " passed!\n";
            return true;
        } else {
            std::cout << test << " failed!\n";
            std::cout << "output: " << output << "\n";
            std::cout << "truth:  " << truth << "\n";
            return false;
        }
    }  
    
    int main(int argc, char* argv[]){
     
    
std::cout << "=============================================\n";
std::string test = "NI_RD_LBP_P42g_R2";
{
	Array3D<int,5,5,5> array = {{
		{{{24,71,216,122,134},{201,78,152,165,81},{86,204,66,35,60},{34,119,51,154,24},{99,186,118,117,11}}},
		{{{173,236,8,108,76},{102,188,23,116,75},{128,194,214,183,170},{28,60,176,35,2},{128,169,226,73,129}}},
		{{{10,188,199,151,145},{245,44,14,47,138},{109,113,133,216,164},{81,155,37,47,250},{170,32,152,33,5}}},
		{{{112,213,120,243,183},{23,234,98,219,188},{216,73,184,198,27},{240,145,5,3,11},{241,46,251,210,97}}},
		{{{138,80,145,230,158},{187,239,68,19,245},{147,165,106,237,218},{90,204,70,250,127},{167,169,162,129,58}}}
	}};
	double mur = 194;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {23,21};
	assert( check(test+" Test 0", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{116,235,109,207,121},{244,97,251,165,68},{110,198,1,216,82},{169,10,46,9,58},{127,21,218,204,248}}},
		{{{254,227,152,219,117},{4,247,223,80,238},{170,113,34,234,24},{224,253,93,235,8},{2,60,145,79,43}}},
		{{{121,7,128,85,72},{212,20,236,228,38},{178,157,125,131,5},{78,199,43,243,120},{180,8,150,241,39}}},
		{{{62,242,230,56,38},{194,198,223,34,201},{98,99,238,185,26},{22,105,156,76,135},{236,142,109,7,103}}},
		{{{156,53,152,247,143},{1,37,174,237,254},{120,180,196,48,16},{65,245,162,90,13},{145,53,58,88,77}}}
	}};
	double mur = 163;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,18};
	assert( check(test+" Test 1", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{129,53,10,247,219},{242,154,55,53,63},{69,71,94,238,22},{122,215,3,109,38},{121,11,193,144,70}}},
		{{{248,16,240,137,124},{70,208,250,151,90},{64,172,48,98,35},{29,191,211,67,236},{130,222,221,218,162}}},
		{{{12,225,156,0,51},{9,85,213,116,195},{127,155,19,144,245},{151,209,110,151,79},{115,54,2,114,94}}},
		{{{14,178,253,195,250},{29,176,228,103,234},{183,54,116,93,40},{32,234,124,82,84},{206,14,32,221,64}}},
		{{{166,181,244,88,84},{221,220,41,173,181},{58,235,96,8,9},{207,193,8,234,181},{151,25,90,149,237}}}
	}};
	double mur = 60;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 2", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{32,34,95,135,137},{237,64,177,152,164},{3,243,74,33,221},{99,114,191,203,222},{179,1,203,6,134}}},
		{{{156,154,13,191,187},{22,227,62,230,170},{177,27,153,123,2},{59,80,172,102,89},{158,5,66,126,131}}},
		{{{237,57,11,195,61},{221,77,7,117,175},{41,219,141,74,127},{152,124,173,215,112},{11,76,33,243,252}}},
		{{{98,108,90,146,27},{64,90,90,91,26},{148,19,6,85,247},{229,199,122,17,51},{62,75,216,130,112}}},
		{{{126,181,72,58,19},{133,153,0,195,200},{3,11,65,40,152},{78,28,149,161,205},{254,58,112,198,21}}}
	}};
	double mur = 185;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 3", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{11,225,62,178,161},{174,222,139,110,35},{208,58,217,28,72},{186,125,40,113,88},{117,205,216,62,92}}},
		{{{13,112,153,186,46},{106,33,169,195,206},{15,96,58,30,167},{104,237,136,40,14},{17,111,155,147,248}}},
		{{{252,79,13,5,131},{119,30,229,214,20},{242,148,222,6,119},{134,117,235,112,179},{94,208,253,61,44}}},
		{{{162,226,79,130,174},{253,42,217,69,24},{54,142,236,4,200},{194,235,148,114,101},{195,143,160,107,169}}},
		{{{240,26,89,150,104},{94,174,81,52,68},{39,134,147,163,249},{138,143,43,53,254},{115,252,92,211,176}}}
	}};
	double mur = 240;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {22,15};
	assert( check(test+" Test 4", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{207,155,53,93,113},{130,102,10,209,250},{47,170,202,43,165},{86,4,90,13,27},{117,150,101,10,152}}},
		{{{172,87,15,85,212},{102,202,240,227,41},{116,203,35,217,83},{161,171,50,99,6},{68,78,204,201,92}}},
		{{{148,177,81,60,55},{159,68,108,39,199},{206,122,211,125,240},{57,54,85,202,190},{75,117,175,89,47}}},
		{{{97,138,62,81,57},{151,36,157,20,203},{230,232,47,231,203},{240,219,58,157,2},{114,92,62,96,179}}},
		{{{253,46,122,147,201},{64,39,234,52,250},{74,68,79,155,6},{139,89,180,144,99},{235,135,176,134,113}}}
	}};
	double mur = 3;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {18,23};
	assert( check(test+" Test 5", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{154,189,16,197,163},{21,224,165,25,236},{169,97,140,90,60},{37,78,46,76,139},{115,43,47,121,153}}},
		{{{235,234,138,150,15},{136,58,107,115,3},{209,45,23,80,243},{61,21,45,175,139},{117,116,51,213,44}}},
		{{{151,52,209,131,114},{118,226,246,54,208},{130,194,138,202,128},{62,169,3,230,236},{62,61,11,170,96}}},
		{{{242,102,235,195,221},{132,28,215,146,119},{170,5,87,197,99},{42,77,99,121,58},{41,1,16,171,208}}},
		{{{120,91,6,64,223},{225,175,134,7,81},{243,241,50,124,239},{57,248,199,17,243},{203,44,148,157,181}}}
	}};
	double mur = 156;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {24,19};
	assert( check(test+" Test 6", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{103,197,29,1,81},{64,71,182,211,74},{236,249,69,63,167},{18,50,230,253,224},{158,182,21,202,132}}},
		{{{179,153,74,239,19},{40,71,130,182,119},{219,102,134,222,60},{189,204,179,79,143},{154,31,137,16,221}}},
		{{{122,59,71,213,84},{119,15,139,188,177},{134,54,27,175,113},{127,252,193,103,106},{90,218,205,183,224}}},
		{{{112,109,170,206,152},{36,13,146,176,30},{23,134,25,114,133},{159,108,20,80,71},{40,83,198,31,204}}},
		{{{187,62,228,237,34},{90,220,92,134,6},{112,150,170,109,16},{0,121,165,113,0},{200,24,172,137,173}}}
	}};
	double mur = 203;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,26};
	assert( check(test+" Test 7", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{59,143,67,220,242},{143,215,25,183,200},{36,195,223,169,247},{131,99,96,35,206},{77,104,252,246,90}}},
		{{{154,28,172,82,78},{118,0,151,219,192},{134,221,141,44,166},{20,34,194,23,13},{204,180,64,37,231}}},
		{{{118,62,91,2,77},{46,24,174,91,253},{248,122,106,166,91},{159,47,31,79,9},{181,185,64,20,223}}},
		{{{110,254,199,131,226},{121,25,22,120,157},{253,4,30,143,221},{160,14,200,41,144},{201,213,118,251,53}}},
		{{{241,224,189,87,226},{162,31,204,18,231},{49,244,15,240,182},{159,168,27,150,186},{186,7,155,249,183}}}
	}};
	double mur = 113;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,23};
	assert( check(test+" Test 8", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{12,118,172,215,61},{200,39,97,44,197},{148,80,208,33,129},{249,71,117,117,243},{7,238,171,119,90}}},
		{{{77,45,134,240,174},{124,237,225,163,52},{118,175,14,104,195},{230,222,2,144,126},{21,130,223,240,222}}},
		{{{131,40,88,119,212},{123,2,193,143,218},{61,140,168,240,72},{191,141,122,212,136},{196,180,170,219,142}}},
		{{{197,152,87,129,60},{169,232,159,108,10},{130,9,140,62,59},{193,218,32,160,84},{234,49,146,74,47}}},
		{{{139,95,133,20,104},{197,185,89,229,233},{178,226,125,36,26},{36,84,4,224,143},{116,205,166,192,121}}}
	}};
	double mur = 46;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {24,22};
	assert( check(test+" Test 9", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{28,223,132,44,87},{39,44,206,12,112},{54,3,48,63,12},{22,177,3,120,154},{111,235,88,154,56}}},
		{{{140,238,156,189,166},{17,174,123,65,151},{238,166,221,219,150},{254,172,3,237,134},{135,83,162,151,244}}},
		{{{24,209,14,153,220},{75,248,94,68,47},{93,80,40,61,15},{50,1,60,180,118},{224,84,218,105,107}}},
		{{{167,224,238,62,67},{51,126,117,94,124},{42,121,128,48,41},{32,90,242,8,129},{79,118,194,222,148}}},
		{{{1,70,211,174,239},{73,243,254,58,37},{99,195,147,98,80},{89,159,224,76,35},{121,75,44,203,54}}}
	}};
	double mur = 48;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {22,27};
	assert( check(test+" Test 10", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{243,223,207,74,157},{16,141,221,47,154},{170,68,76,152,146},{220,242,43,155,123},{245,32,67,60,39}}},
		{{{19,204,76,189,33},{126,142,68,188,232},{90,235,68,40,247},{210,218,253,106,60},{160,135,46,129,145}}},
		{{{185,106,71,204,205},{83,173,240,236,206},{195,188,8,13,131},{219,189,214,145,187},{215,103,247,6,162}}},
		{{{94,104,71,98,160},{96,248,151,184,65},{135,250,165,34,86},{115,17,66,241,226},{67,149,5,241,166}}},
		{{{69,205,242,95,28},{161,21,201,204,105},{115,205,152,128,127},{137,125,120,215,13},{135,248,8,159,146}}}
	}};
	double mur = 15;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,21};
	assert( check(test+" Test 11", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{64,48,214,158,140},{109,252,12,77,62},{241,196,135,203,193},{224,118,14,225,69},{5,165,4,241,238}}},
		{{{248,247,242,199,215},{230,67,244,170,120},{64,100,86,118,213},{192,26,159,124,162},{73,103,250,34,202}}},
		{{{177,144,191,93,208},{38,58,50,192,122},{23,64,45,193,159},{125,254,96,33,161},{251,217,204,42,135}}},
		{{{3,165,254,72,204},{142,14,9,118,203},{196,141,13,104,209},{223,54,51,147,102},{147,97,232,168,165}}},
		{{{106,184,22,87,115},{237,135,137,41,230},{245,177,135,97,43},{123,230,15,89,107},{234,216,61,209,117}}}
	}};
	double mur = 155;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,43};
	assert( check(test+" Test 12", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{207,128,220,216,145},{175,8,37,60,121},{250,9,44,129,185},{146,121,57,110,72},{175,142,191,93,140}}},
		{{{73,245,9,28,224},{213,180,41,47,63},{142,182,75,105,245},{82,25,11,170,165},{146,97,165,165,58}}},
		{{{50,54,164,143,159},{99,106,97,76,215},{192,13,136,6,105},{218,146,234,207,14},{142,83,197,138,65}}},
		{{{41,175,1,174,160},{1,113,243,212,128},{200,203,151,100,150},{246,91,111,31,197},{190,57,63,61,205}}},
		{{{93,184,71,106,220},{223,95,191,163,11},{112,76,102,186,170},{122,137,35,73,105},{47,139,120,159,24}}}
	}};
	double mur = 57;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,21};
	assert( check(test+" Test 13", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{161,82,239,42,19},{226,229,204,71,228},{173,47,104,201,231},{48,199,91,51,136},{159,166,198,226,143}}},
		{{{198,15,101,116,107},{53,186,103,154,40},{80,193,226,1,5},{27,182,47,110,80},{2,10,172,104,82}}},
		{{{48,194,85,118,132},{126,158,208,81,111},{68,104,67,146,16},{205,58,105,87,242},{7,245,242,149,185}}},
		{{{66,48,0,202,29},{132,110,205,247,160},{148,187,93,20,168},{213,109,108,145,138},{245,101,74,179,236}}},
		{{{42,28,43,83,2},{137,92,76,85,211},{144,161,254,11,189},{175,227,154,38,241},{50,12,54,53,114}}}
	}};
	double mur = 133;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 14", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{208,55,97,33,77},{194,39,39,121,194},{88,234,225,117,156},{85,174,191,253,182},{201,28,23,140,248}}},
		{{{109,186,209,81,31},{191,125,133,228,148},{28,226,6,248,86},{191,22,194,131,103},{48,95,207,25,73}}},
		{{{106,74,235,246,197},{146,152,67,159,55},{209,231,5,123,143},{135,94,185,10,37},{218,195,109,81,134}}},
		{{{102,83,44,241,110},{127,6,85,57,215},{96,24,117,1,94},{108,245,51,153,140},{16,107,115,249,254}}},
		{{{216,20,32,231,52},{17,247,95,175,182},{218,73,57,194,120},{251,217,122,214,94},{20,1,16,170,30}}}
	}};
	double mur = 98;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {22,25};
	assert( check(test+" Test 15", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{198,9,91,100,228},{155,24,56,156,82},{8,148,19,73,52},{230,132,149,224,106},{155,0,218,59,146}}},
		{{{107,132,35,147,195},{8,169,248,191,29},{106,242,124,139,90},{8,20,228,121,82},{219,234,151,44,1}}},
		{{{120,140,20,60,226},{152,242,70,179,39},{210,208,17,173,47},{202,179,186,205,110},{174,73,54,178,251}}},
		{{{138,76,178,119,99},{75,28,140,85,179},{41,228,119,166,15},{246,186,150,242,223},{145,181,246,189,240}}},
		{{{219,47,31,119,210},{176,214,14,14,35},{137,52,242,9,96},{173,119,60,3,202},{235,120,141,219,106}}}
	}};
	double mur = 150;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,43};
	assert( check(test+" Test 16", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{30,153,179,189,9},{54,177,30,105,171},{209,185,96,120,249},{146,145,46,245,92},{11,32,21,233,121}}},
		{{{45,169,9,229,210},{190,200,54,68,89},{7,37,249,127,11},{110,86,142,22,19},{38,165,129,72,242}}},
		{{{19,106,84,1,13},{135,26,243,29,50},{148,188,88,156,188},{71,136,53,170,47},{131,98,253,119,90}}},
		{{{107,21,11,181,173},{111,185,59,142,140},{136,157,15,194,158},{99,251,22,64,210},{231,57,210,59,96}}},
		{{{227,124,122,59,182},{103,185,244,32,29},{104,43,125,53,152},{169,50,239,1,176},{9,97,64,35,69}}}
	}};
	double mur = 166;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,15};
	assert( check(test+" Test 17", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{208,124,154,122,18},{27,143,228,48,243},{208,180,187,45,98},{17,7,190,28,82},{214,192,189,107,195}}},
		{{{14,118,80,125,164},{179,19,161,139,182},{236,181,10,32,13},{218,144,220,46,206},{118,68,129,63,13}}},
		{{{2,15,224,63,121},{197,243,129,155,143},{203,78,99,78,51},{75,187,215,57,131},{245,26,71,179,25}}},
		{{{223,81,15,126,217},{32,124,231,226,209},{99,44,177,34,61},{178,152,120,63,224},{3,145,91,79,234}}},
		{{{44,70,236,119,99},{22,24,37,165,169},{126,170,98,52,175},{43,28,158,118,38},{207,10,125,231,78}}}
	}};
	double mur = 225;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 18", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{71,114,193,115,151},{18,23,82,120,145},{37,59,137,217,176},{237,196,153,200,166},{243,195,171,4,218}}},
		{{{36,168,26,105,23},{200,251,14,206,215},{84,238,49,208,234},{198,136,21,106,96},{85,36,52,196,235}}},
		{{{204,42,92,83,22},{230,29,136,154,241},{230,117,28,192,25},{44,43,25,254,73},{248,47,204,25,197}}},
		{{{222,223,247,163,199},{20,101,65,2,189},{0,42,220,222,150},{128,217,222,116,195},{204,121,114,227,232}}},
		{{{222,83,19,227,45},{82,254,91,201,98},{42,91,110,163,215},{173,51,231,12,132},{73,254,186,94,71}}}
	}};
	double mur = 82;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,43};
	assert( check(test+" Test 19", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{203,238,183,117,64},{104,5,197,181,232},{112,133,170,98,27},{217,186,227,140,121},{137,105,172,172,89}}},
		{{{16,57,166,220,124},{203,62,157,169,128},{168,105,105,71,170},{128,120,146,109,201},{198,108,205,137,110}}},
		{{{253,133,53,190,22},{77,116,203,172,223},{21,97,26,133,152},{219,75,101,238,83},{41,81,209,15,23}}},
		{{{92,192,201,99,143},{151,223,129,173,183},{205,248,157,9,167},{87,95,237,37,16},{192,77,97,36,216}}},
		{{{111,24,142,115,157},{253,94,53,216,192},{115,138,247,102,164},{159,183,173,41,44},{34,245,78,5,130}}}
	}};
	double mur = 18;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {25,27};
	assert( check(test+" Test 20", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{60,89,135,88,51},{239,250,21,212,223},{175,69,21,150,206},{160,207,239,184,76},{96,38,176,98,26}}},
		{{{219,222,7,157,16},{72,204,79,209,206},{234,227,161,89,31},{164,200,90,17,2},{99,199,52,30,79}}},
		{{{88,166,249,130,18},{0,101,32,144,236},{26,105,222,38,39},{36,193,56,49,117},{120,130,147,145,164}}},
		{{{61,53,207,101,17},{35,110,91,247,216},{172,92,38,225,169},{169,157,187,78,98},{95,189,212,248,217}}},
		{{{27,5,13,60,218},{59,183,130,148,143},{77,198,50,30,32},{65,137,79,145,69},{202,178,44,206,216}}}
	}};
	double mur = 211;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {24,43};
	assert( check(test+" Test 21", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{58,122,105,172,0},{129,149,26,149,62},{62,234,222,234,205},{206,151,100,118,31},{47,248,148,174,189}}},
		{{{96,142,87,189,106},{141,190,120,162,110},{105,199,17,33,127},{7,186,143,81,12},{194,10,114,228,20}}},
		{{{31,228,111,254,165},{89,140,176,21,251},{20,3,59,99,216},{69,17,207,91,117},{136,237,9,105,211}}},
		{{{1,195,94,48,241},{85,146,154,184,128},{67,140,107,239,235},{1,45,252,99,229},{155,131,46,45,234}}},
		{{{134,171,219,133,95},{141,102,169,192,65},{134,249,185,99,3},{193,181,188,228,92},{234,212,165,40,209}}}
	}};
	double mur = 223;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 22", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{93,254,14,165,183},{139,192,178,16,64},{61,155,209,37,178},{107,80,52,204,44},{167,133,75,88,6}}},
		{{{13,108,219,56,27},{198,187,237,96,77},{117,10,27,25,249},{215,81,10,81,199},{231,192,69,157,238}}},
		{{{236,137,190,139,60},{74,225,9,139,241},{43,81,93,17,83},{29,140,142,118,116},{55,140,130,105,217}}},
		{{{250,152,46,186,57},{73,91,240,165,227},{104,32,44,122,236},{212,100,193,166,178},{197,202,132,7,61}}},
		{{{57,247,224,172,171},{112,45,224,137,13},{226,56,181,53,223},{223,240,140,71,176},{9,229,9,165,78}}}
	}};
	double mur = 224;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,34};
	assert( check(test+" Test 23", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{35,183,246,137,193},{181,17,50,242,148},{160,17,210,41,62},{58,155,213,53,202},{114,111,230,156,69}}},
		{{{60,205,137,63,198},{198,92,157,154,173},{65,161,156,156,38},{140,206,90,79,56},{165,97,122,119,35}}},
		{{{99,112,119,7,199},{201,96,249,122,57},{243,178,213,242,58},{96,110,238,176,45},{107,189,145,89,226}}},
		{{{167,21,1,91,177},{239,19,158,6,176},{17,102,160,120,247},{46,151,253,118,227},{13,216,51,73,83}}},
		{{{97,89,167,143,11},{168,42,88,178,232},{179,168,191,63,175},{200,59,183,240,29},{141,86,116,63,208}}}
	}};
	double mur = 34;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,43};
	assert( check(test+" Test 24", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{122,11,171,102,246},{104,69,138,16,165},{161,195,170,84,75},{16,91,213,208,211},{11,202,124,147,79}}},
		{{{212,184,92,77,144},{231,22,37,114,164},{59,219,211,76,188},{62,127,144,120,153},{81,13,226,105,176}}},
		{{{196,171,16,85,188},{190,194,178,202,252},{79,25,196,222,77},{162,142,250,224,159},{219,213,74,224,94}}},
		{{{240,188,96,144,40},{28,163,44,202,46},{33,10,190,136,113},{32,171,36,28,42},{166,92,112,66,131}}},
		{{{116,252,72,23,221},{215,48,114,229,191},{239,171,157,218,167},{61,15,70,199,71},{9,22,46,76,158}}}
	}};
	double mur = 51;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,43};
	assert( check(test+" Test 25", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{165,194,204,67,65},{168,85,21,31,10},{123,225,174,36,211},{152,16,111,32,113},{95,33,61,14,171}}},
		{{{80,91,7,117,45},{172,110,126,198,29},{56,194,231,148,175},{46,199,123,237,203},{224,207,11,233,102}}},
		{{{106,0,118,234,208},{3,198,79,165,131},{44,198,129,38,95},{15,119,63,66,20},{3,232,55,243,162}}},
		{{{24,6,97,22,247},{36,94,34,101,99},{7,193,35,200,212},{181,3,13,48,14},{199,183,226,243,60}}},
		{{{1,216,143,40,196},{57,182,228,71,242},{138,140,95,159,95},{111,82,125,139,159},{144,190,101,52,106}}}
	}};
	double mur = 65;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,43};
	assert( check(test+" Test 26", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{79,169,23,33,222},{57,111,94,78,191},{61,250,81,159,245},{1,220,123,109,123},{117,194,43,71,34}}},
		{{{237,0,196,217,110},{130,193,196,136,134},{152,221,74,21,7},{204,58,88,78,210},{190,12,180,226,245}}},
		{{{61,119,215,114,51},{118,68,107,26,165},{83,196,29,36,233},{165,126,149,225,151},{185,127,158,131,147}}},
		{{{218,118,155,197,148},{251,63,114,1,45},{237,120,219,181,226},{46,43,195,38,48},{232,1,62,78,202}}},
		{{{229,60,166,185,179},{50,117,33,138,153},{33,122,69,189,239},{22,160,171,97,151},{111,162,233,100,77}}}
	}};
	double mur = 107;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,22};
	assert( check(test+" Test 27", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{18,249,201,130,135},{239,55,70,44,148},{140,42,173,50,161},{167,180,191,43,2},{223,59,193,40,148}}},
		{{{249,114,54,55,128},{95,90,217,242,70},{182,192,26,30,61},{6,66,96,30,218},{114,228,64,75,44}}},
		{{{187,10,210,91,134},{50,10,6,175,47},{24,172,253,5,234},{10,161,186,114,69},{29,199,124,35,74}}},
		{{{106,68,81,188,180},{253,219,87,126,17},{253,149,28,9,86},{200,59,40,4,188},{58,107,216,73,180}}},
		{{{125,105,141,253,183},{52,45,26,51,54},{224,249,244,97,209},{83,180,12,54,137},{149,174,116,152,151}}}
	}};
	double mur = 232;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {22,43};
	assert( check(test+" Test 28", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{21,122,36,241,181},{118,76,16,122,254},{252,48,170,95,137},{149,230,89,38,12},{148,189,24,161,59}}},
		{{{3,52,123,56,118},{229,245,100,130,187},{36,39,157,8,201},{205,138,212,112,215},{50,142,34,112,105}}},
		{{{154,46,181,42,192},{127,71,254,125,187},{161,129,65,217,60},{80,184,253,217,134},{87,254,226,145,184}}},
		{{{38,127,154,131,165},{206,220,8,196,229},{47,108,41,0,156},{81,189,178,97,20},{188,61,47,85,124}}},
		{{{74,75,5,196,199},{19,142,182,98,108},{159,211,155,215,0},{59,20,56,67,207},{153,127,71,124,70}}}
	}};
	double mur = 160;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,20};
	assert( check(test+" Test 29", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{30,53,132,5,117},{244,194,218,88,78},{126,67,120,35,51},{243,201,50,4,128},{4,250,199,124,11}}},
		{{{15,207,110,53,123},{251,100,44,131,31},{104,131,174,87,249},{177,107,175,25,18},{249,186,184,31,194}}},
		{{{200,34,10,59,188},{1,241,235,149,72},{192,161,155,122,92},{89,154,94,112,84},{14,42,154,93,74}}},
		{{{219,58,50,114,48},{191,81,169,242,175},{63,0,188,5,153},{193,207,236,203,232},{57,36,206,251,139}}},
		{{{218,187,51,219,247},{218,193,236,30,102},{160,54,168,166,156},{112,167,237,153,156},{80,72,164,19,144}}}
	}};
	double mur = 251;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 30", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{40,97,199,116,240},{150,88,79,136,217},{201,151,80,173,64},{196,49,155,123,196},{106,180,149,165,227}}},
		{{{173,220,161,171,231},{159,52,127,17,166},{86,74,161,108,41},{221,229,177,221,95},{228,238,194,175,88}}},
		{{{93,127,217,41,9},{58,16,0,41,192},{194,142,61,181,161},{200,58,209,134,2},{106,214,158,61,239}}},
		{{{101,37,234,160,47},{201,103,22,178,65},{156,135,193,134,165},{26,47,118,45,39},{145,6,16,66,183}}},
		{{{222,243,125,68,198},{147,57,117,249,225},{32,40,187,172,50},{12,221,122,106,215},{143,165,228,22,229}}}
	}};
	double mur = 3;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,22};
	assert( check(test+" Test 31", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{166,231,148,162,204},{162,54,71,103,84},{161,8,141,148,2},{28,215,41,99,178},{253,69,153,121,45}}},
		{{{37,162,215,7,67},{32,159,138,228,64},{58,145,9,94,189},{168,56,48,235,202},{173,81,79,109,244}}},
		{{{40,208,194,63,230},{225,209,184,152,56},{192,144,246,77,76},{209,165,69,36,49},{87,117,110,212,138}}},
		{{{155,99,110,209,84},{201,237,111,205,99},{90,208,197,148,221},{241,250,98,206,247},{78,91,243,131,37}}},
		{{{90,97,181,210,78},{248,45,254,171,179},{177,31,143,191,122},{49,3,174,55,207},{192,119,67,230,168}}}
	}};
	double mur = 95;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 32", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{246,83,18,248,200},{75,157,193,39,130},{16,169,90,186,127},{191,77,193,115,90},{35,167,24,92,183}}},
		{{{178,209,219,71,224},{39,98,41,172,223},{73,75,244,226,5},{176,161,129,12,182},{178,184,220,45,206}}},
		{{{68,203,184,215,91},{185,64,20,105,16},{11,166,188,6,173},{217,99,87,216,207},{165,130,211,183,27}}},
		{{{60,49,195,12,36},{13,109,76,75,14},{33,181,94,34,142},{23,221,177,149,78},{8,23,228,83,215}}},
		{{{76,42,51,222,184},{31,110,185,37,41},{4,180,60,101,54},{41,47,130,30,84},{174,131,65,42,248}}}
	}};
	double mur = 129;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {26,23};
	assert( check(test+" Test 33", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{148,108,111,26,164},{181,100,184,99,232},{194,127,35,47,34},{63,184,239,230,116},{89,77,169,30,75}}},
		{{{114,71,183,70,184},{67,35,83,103,94},{111,166,124,240,222},{138,244,103,198,63},{119,161,11,0,82}}},
		{{{102,29,120,54,195},{184,219,192,22,138},{6,90,119,125,175},{116,196,233,136,164},{148,10,241,148,253}}},
		{{{237,10,5,231,190},{52,38,202,88,1},{39,65,115,86,233},{55,177,152,32,211},{165,16,41,63,59}}},
		{{{55,194,159,133,163},{84,141,3,203,7},{198,230,80,100,125},{125,132,247,195,74},{50,190,229,31,229}}}
	}};
	double mur = 177;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,16};
	assert( check(test+" Test 34", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{68,99,55,202,69},{253,22,58,110,40},{6,40,190,110,29},{152,195,230,215,211},{149,56,120,91,210}}},
		{{{165,72,17,184,149},{196,132,133,139,173},{0,61,241,93,166},{56,238,239,190,72},{138,121,148,53,151}}},
		{{{171,154,148,83,244},{49,120,14,192,211},{244,53,254,116,249},{97,238,128,105,135},{123,177,231,28,81}}},
		{{{39,123,138,229,242},{241,62,229,178,241},{84,216,197,175,194},{27,67,126,211,182},{201,143,17,241,168}}},
		{{{136,198,139,246,210},{243,130,89,212,169},{26,181,198,31,45},{90,66,69,197,115},{86,214,213,186,214}}}
	}};
	double mur = 128;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,18};
	assert( check(test+" Test 35", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{224,59,227,23,14},{34,30,184,181,131},{181,254,219,247,43},{157,120,193,120,192},{198,34,103,128,41}}},
		{{{186,192,8,12,46},{244,178,86,194,65},{166,215,109,42,207},{122,218,215,161,237},{131,54,226,17,78}}},
		{{{44,171,157,248,94},{15,215,5,190,247},{209,79,76,176,105},{206,40,125,170,171},{6,137,43,101,139}}},
		{{{147,127,238,120,156},{250,239,72,140,1},{10,33,1,51,200},{176,187,24,108,218},{243,111,3,102,233}}},
		{{{142,132,65,3,201},{129,206,52,226,144},{37,97,141,190,184},{52,217,92,18,73},{58,194,6,64,251}}}
	}};
	double mur = 149;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 36", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{33,103,198,159,216},{46,70,94,32,215},{149,5,252,142,226},{175,238,82,60,78},{187,67,249,133,72}}},
		{{{158,239,17,132,181},{198,86,110,191,22},{123,175,42,136,222},{89,72,201,2,44},{190,136,20,150,115}}},
		{{{161,8,124,111,211},{244,103,186,59,190},{105,148,220,58,179},{175,54,244,239,196},{180,134,3,164,230}}},
		{{{61,176,244,208,144},{235,22,21,185,89},{168,209,223,178,224},{225,154,32,134,247},{249,20,229,222,48}}},
		{{{241,20,140,15,79},{97,32,218,127,64},{237,65,118,112,92},{192,164,50,101,212},{2,208,139,92,89}}}
	}};
	double mur = 168;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,16};
	assert( check(test+" Test 37", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{182,44,56,19,129},{57,92,154,102,144},{143,152,193,150,149},{241,204,237,77,218},{63,11,29,80,66}}},
		{{{163,109,53,145,132},{217,165,39,113,230},{32,253,41,239,109},{219,44,139,170,3},{112,9,47,201,47}}},
		{{{173,203,112,134,94},{17,178,105,114,29},{136,176,145,123,94},{241,56,248,249,203},{228,233,47,22,61}}},
		{{{49,202,7,66,81},{216,192,187,227,88},{100,141,91,57,173},{219,177,94,76,235},{249,116,52,218,135}}},
		{{{15,208,77,24,62},{253,242,123,36,249},{210,100,207,109,215},{223,1,23,92,213},{179,108,137,232,19}}}
	}};
	double mur = 171;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {22,18};
	assert( check(test+" Test 38", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{77,196,246,102,179},{195,246,90,138,151},{47,47,248,42,50},{50,210,12,248,144},{123,173,139,128,168}}},
		{{{84,216,159,202,143},{246,246,51,230,83},{137,116,24,163,195},{114,51,108,26,36},{211,215,53,50,185}}},
		{{{96,135,75,56,183},{142,177,105,163,183},{12,148,122,168,243},{71,252,84,4,177},{251,254,74,134,179}}},
		{{{105,203,144,248,237},{157,146,46,253,171},{54,147,115,120,151},{206,233,52,156,119},{210,87,158,239,247}}},
		{{{102,239,73,132,219},{197,242,182,29,156},{112,146,45,103,210},{228,169,90,22,188},{5,112,100,113,157}}}
	}};
	double mur = 252;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 39", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{10,82,131,132,115},{206,201,236,160,182},{107,242,99,111,38},{122,141,47,182,134},{109,180,16,128,212}}},
		{{{142,238,207,144,30},{158,230,69,136,114},{105,31,173,215,117},{116,118,153,153,215},{221,225,135,51,116}}},
		{{{39,202,194,210,183},{4,97,138,92,44},{150,254,22,145,122},{115,225,24,126,7},{164,89,20,13,159}}},
		{{{202,135,225,158,166},{132,49,74,76,17},{221,180,10,106,98},{7,9,92,24,2},{235,104,68,79,20}}},
		{{{180,111,0,52,141},{34,37,205,17,155},{89,28,5,174,84},{220,222,173,230,22},{13,160,101,106,67}}}
	}};
	double mur = 181;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {25,21};
	assert( check(test+" Test 40", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{119,249,59,146,67},{104,246,221,150,132},{123,4,64,150,22},{170,227,73,180,103},{88,15,76,71,238}}},
		{{{219,189,135,29,20},{232,91,72,222,104},{170,217,115,156,8},{81,47,66,164,90},{137,115,215,190,244}}},
		{{{250,41,200,118,8},{181,178,223,206,16},{184,252,6,163,36},{225,176,107,22,35},{94,53,120,183,11}}},
		{{{155,215,160,53,154},{120,149,101,98,47},{121,54,183,186,165},{155,213,128,151,16},{187,205,253,196,235}}},
		{{{241,196,118,244,110},{128,153,106,52,76},{63,77,96,33,34},{126,76,47,38,214},{28,27,101,72,138}}}
	}};
	double mur = 45;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 41", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{219,143,75,123,45},{65,233,55,100,79},{117,69,115,210,53},{182,115,242,39,242},{179,125,101,26,27}}},
		{{{7,209,160,136,2},{180,53,154,33,54},{70,19,97,65,247},{137,3,184,18,162},{142,241,252,253,225}}},
		{{{89,224,74,192,226},{136,73,61,202,162},{138,20,76,24,87},{154,118,44,1,184},{135,66,81,182,149}}},
		{{{236,183,132,241,1},{219,222,103,212,75},{163,37,245,250,11},{233,200,213,200,29},{245,24,172,196,43}}},
		{{{17,179,136,147,210},{3,159,70,62,122},{19,59,224,151,114},{211,25,81,81,71},{13,199,6,106,251}}}
	}};
	double mur = 43;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,32};
	assert( check(test+" Test 42", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{5,190,5,113,165},{146,157,77,136,60},{110,243,3,148,148},{54,23,201,248,212},{129,169,55,41,107}}},
		{{{68,180,95,110,40},{89,217,145,178,51},{251,178,74,1,103},{38,112,26,254,122},{200,236,91,42,7}}},
		{{{133,118,46,81,159},{135,119,190,181,192},{102,52,209,187,87},{240,230,101,170,90},{50,184,146,186,197}}},
		{{{127,240,249,205,157},{201,168,44,180,216},{223,179,223,126,68},{243,148,112,226,170},{214,233,95,218,179}}},
		{{{77,201,179,222,220},{194,113,44,254,112},{190,106,58,1,219},{172,69,108,164,8},{30,162,181,168,154}}}
	}};
	double mur = 106;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,21};
	assert( check(test+" Test 43", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{225,58,111,126,155},{157,142,183,214,76},{122,46,30,172,220},{52,182,89,87,55},{244,26,200,87,129}}},
		{{{167,17,50,165,243},{214,108,131,79,56},{235,13,221,62,126},{145,225,23,169,94},{168,125,25,250,232}}},
		{{{240,226,63,147,13},{201,108,124,10,87},{48,238,250,85,148},{83,59,2,126,191},{248,127,39,105,190}}},
		{{{102,232,7,187,69},{71,164,147,31,183},{60,186,180,133,183},{231,199,224,129,214},{63,52,75,173,206}}},
		{{{116,230,132,191,37},{215,20,245,220,141},{120,135,10,48,220},{161,196,119,168,14},{17,243,66,105,223}}}
	}};
	double mur = 91;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {22,22};
	assert( check(test+" Test 44", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{206,31,146,226,113},{201,104,221,152,34},{209,152,47,230,163},{1,36,53,129,41},{15,167,22,117,200}}},
		{{{134,47,213,102,63},{19,214,252,49,119},{99,249,169,68,176},{91,57,233,6,134},{143,188,177,172,161}}},
		{{{56,58,244,42,229},{173,141,215,21,167},{48,237,39,142,169},{213,216,31,37,71},{100,185,218,109,26}}},
		{{{145,220,11,2,41},{105,229,116,153,113},{13,121,88,54,82},{237,74,144,171,141},{31,49,253,187,30}}},
		{{{31,194,82,171,3},{18,223,8,139,9},{216,103,132,105,22},{80,218,156,228,182},{210,202,217,31,164}}}
	}};
	double mur = 168;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {23,24};
	assert( check(test+" Test 45", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{193,242,5,41,242},{85,112,81,110,96},{148,182,33,73,206},{88,181,173,22,2},{78,238,170,143,248}}},
		{{{59,58,80,208,242},{31,33,200,169,62},{252,55,133,216,193},{80,161,18,158,69},{173,27,105,55,110}}},
		{{{130,214,134,119,79},{49,83,143,21,128},{165,148,115,243,87},{150,212,165,16,23},{228,148,6,240,13}}},
		{{{31,140,228,163,153},{100,191,239,147,165},{32,221,160,92,83},{35,117,222,134,128},{65,47,54,81,41}}},
		{{{61,48,185,213,41},{29,197,94,165,104},{151,7,131,239,60},{211,113,236,69,68},{228,48,251,212,64}}}
	}};
	double mur = 64;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,43};
	assert( check(test+" Test 46", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{102,66,170,247,124},{121,188,124,150,1},{142,177,214,37,187},{222,94,155,61,70},{152,240,118,15,237}}},
		{{{233,230,28,182,20},{119,89,98,29,65},{215,95,8,68,127},{1,160,156,252,14},{98,238,167,127,56}}},
		{{{199,121,4,64,20},{130,103,63,123,147},{96,165,32,188,101},{196,157,216,186,21},{34,249,179,163,221}}},
		{{{2,202,5,155,184},{33,108,50,230,12},{117,172,224,8,97},{209,166,159,90,137},{27,230,105,253,22}}},
		{{{186,249,34,185,126},{43,100,231,233,228},{196,228,118,147,9},{243,167,127,247,83},{123,225,153,208,155}}}
	}};
	double mur = 143;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,25};
	assert( check(test+" Test 47", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{90,187,50,83,174},{102,120,103,125,117},{19,138,142,100,207},{166,152,162,161,79},{82,229,187,137,131}}},
		{{{153,230,62,237,38},{13,35,221,134,20},{159,133,26,26,251},{112,19,200,66,117},{85,91,167,85,19}}},
		{{{204,89,161,219,7},{58,229,219,153,87},{244,11,10,226,28},{164,48,91,124,140},{91,75,159,48,122}}},
		{{{132,189,66,23,182},{90,156,80,66,104},{28,76,242,68,184},{144,75,151,156,135},{146,183,98,208,152}}},
		{{{228,116,188,200,187},{180,249,93,166,96},{36,136,100,179,242},{83,95,83,96,183},{13,202,213,2,113}}}
	}};
	double mur = 118;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,23};
	assert( check(test+" Test 48", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{132,35,25,129,141},{28,84,234,230,133},{188,105,239,180,68},{198,154,77,76,41},{192,210,163,218,180}}},
		{{{6,150,127,198,155},{85,119,47,173,89},{26,4,103,107,252},{176,225,30,176,86},{30,225,4,245,20}}},
		{{{189,244,190,132,176},{108,157,42,157,25},{231,112,2,120,97},{164,216,208,17,95},{245,231,91,47,201}}},
		{{{41,166,134,243,117},{233,199,149,152,48},{149,132,249,122,215},{190,12,175,156,249},{48,220,123,46,229}}},
		{{{184,120,63,116,22},{186,223,62,195,248},{158,40,24,94,106},{186,212,134,27,167},{8,9,97,55,93}}}
	}};
	double mur = 24;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {25,26};
	assert( check(test+" Test 49", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{218,177,126,33,177},{30,177,104,195,206},{237,247,85,118,29},{170,49,76,220,111},{146,78,45,136,213}}},
		{{{11,193,194,81,181},{159,173,159,159,174},{48,181,144,134,16},{83,244,219,193,246},{4,85,47,28,71}}},
		{{{137,141,251,178,27},{140,103,59,94,154},{150,246,139,176,195},{189,117,89,222,240},{54,0,83,81,107}}},
		{{{174,36,86,98,196},{243,126,206,222,189},{147,251,203,130,156},{126,164,211,62,160},{124,72,126,239,72}}},
		{{{208,28,128,229,72},{50,230,132,22,192},{115,76,63,188,167},{181,87,239,150,211},{162,38,198,36,213}}}
	}};
	double mur = 237;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {23,16};
	assert( check(test+" Test 50", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{245,179,200,150,65},{227,23,227,235,220},{189,153,80,220,7},{123,79,77,100,199},{83,187,132,130,28}}},
		{{{109,51,179,125,103},{103,116,217,122,80},{248,252,175,99,6},{144,42,203,236,17},{162,83,89,63,195}}},
		{{{40,34,72,113,147},{69,157,188,17,247},{50,233,199,235,18},{59,200,88,60,137},{211,136,218,184,98}}},
		{{{233,49,0,119,8},{22,182,18,243,69},{197,50,125,172,10},{220,185,86,121,120},{47,98,252,176,174}}},
		{{{100,108,80,30,88},{119,152,53,99,28},{196,28,44,88,184},{165,153,189,14,142},{210,170,130,151,215}}}
	}};
	double mur = 167;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {18,43};
	assert( check(test+" Test 51", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{146,110,217,216,84},{93,197,19,129,116},{239,241,232,28,31},{214,174,110,143,63},{14,129,168,228,250}}},
		{{{169,156,166,7,105},{133,80,99,252,10},{73,175,122,145,173},{34,25,65,159,252},{53,104,7,212,80}}},
		{{{109,88,144,211,212},{130,68,81,252,57},{179,199,12,92,101},{32,82,44,19,163},{111,163,198,182,131}}},
		{{{84,235,219,124,224},{116,230,94,206,74},{124,15,254,87,35},{56,244,70,106,218},{68,182,162,68,250}}},
		{{{251,107,146,73,29},{241,95,238,27,208},{40,197,68,10,4},{23,127,143,245,149},{25,244,28,32,19}}}
	}};
	double mur = 199;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {23,27};
	assert( check(test+" Test 52", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{252,231,135,73,252},{240,183,168,55,122},{149,91,39,171,66},{99,14,195,172,117},{201,86,6,153,140}}},
		{{{60,32,190,181,100},{150,125,79,175,17},{129,179,125,240,202},{138,45,38,114,6},{212,78,165,6,22}}},
		{{{187,22,219,77,56},{200,156,19,61,178},{35,21,102,117,234},{131,120,36,112,173},{125,70,233,74,4}}},
		{{{6,80,158,8,50},{47,238,65,62,207},{21,2,177,172,36},{67,100,207,207,111},{120,123,188,16,160}}},
		{{{101,11,1,62,101},{206,177,35,138,95},{37,219,132,156,57},{12,47,229,111,30},{129,140,112,82,149}}}
	}};
	double mur = 209;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 53", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{193,20,209,83,61},{3,34,102,32,81},{102,244,12,9,156},{41,172,153,252,18},{191,226,15,91,73}}},
		{{{23,230,22,96,15},{89,158,126,181,177},{48,138,228,233,90},{250,84,156,197,66},{74,7,232,155,102}}},
		{{{21,240,98,151,53},{214,193,96,163,99},{242,168,86,160,18},{177,24,191,244,104},{153,164,24,152,18}}},
		{{{51,47,180,216,183},{132,79,3,39,160},{184,252,118,41,236},{89,170,196,77,184},{45,192,178,196,227}}},
		{{{248,32,28,177,63},{136,229,178,131,51},{102,79,202,36,191},{66,121,50,54,230},{50,181,86,87,180}}}
	}};
	double mur = 148;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {24,17};
	assert( check(test+" Test 54", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{24,95,252,157,201},{202,245,65,230,31},{134,149,113,136,154},{107,8,67,240,109},{90,190,189,59,191}}},
		{{{185,40,172,229,250},{195,159,53,123,24},{201,125,109,63,3},{126,64,230,168,88},{112,188,140,11,189}}},
		{{{165,36,42,150,92},{53,124,32,126,181},{56,219,155,5,182},{81,21,105,189,67},{223,27,101,248,237}}},
		{{{17,37,77,186,145},{25,135,203,82,184},{153,203,200,209,245},{63,192,38,150,145},{246,45,217,101,36}}},
		{{{175,36,89,59,101},{123,49,96,174,36},{82,204,106,244,177},{2,149,53,194,158},{147,83,163,43,252}}}
	}};
	double mur = 106;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 55", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{170,231,10,107,140},{113,26,131,63,162},{147,13,78,165,135},{71,209,225,108,103},{101,131,201,131,125}}},
		{{{251,96,40,208,217},{169,133,183,26,19},{67,240,57,43,126},{22,137,206,68,18},{228,81,114,161,101}}},
		{{{88,182,220,22,206},{33,135,24,15,218},{107,68,90,75,155},{116,243,191,124,178},{31,22,160,139,246}}},
		{{{206,103,110,45,128},{114,48,86,89,48},{129,43,7,244,196},{7,128,134,112,114},{124,33,61,166,0}}},
		{{{126,118,48,58,191},{30,31,15,251,103},{84,130,252,16,233},{25,123,92,7,232},{4,117,45,206,148}}}
	}};
	double mur = 105;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {18,27};
	assert( check(test+" Test 56", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{32,223,54,151,154},{171,179,230,33,135},{230,31,216,66,208},{46,214,8,172,224},{11,147,34,143,154}}},
		{{{103,54,161,117,37},{204,73,61,29,97},{122,51,85,28,144},{148,12,182,68,11},{7,150,229,100,46}}},
		{{{167,70,243,100,189},{1,17,66,100,238},{93,167,244,88,221},{3,162,163,13,218},{68,98,228,86,242}}},
		{{{200,104,144,213,106},{78,222,32,141,101},{122,233,124,141,179},{35,251,26,69,171},{198,177,89,9,77}}},
		{{{169,94,94,83,91},{149,251,66,43,234},{130,210,150,11,99},{12,18,146,48,186},{168,202,73,91,2}}}
	}};
	double mur = 136;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {17,43};
	assert( check(test+" Test 57", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{251,62,202,99,199},{129,117,206,7,56},{178,112,110,101,217},{188,222,185,18,159},{172,27,198,60,119}}},
		{{{117,191,250,37,86},{235,81,50,53,189},{181,218,145,50,39},{119,131,51,14,248},{93,108,232,12,57}}},
		{{{200,39,25,131,135},{254,156,143,80,212},{78,215,183,9,38},{252,212,147,105,128},{97,176,237,164,155}}},
		{{{47,227,198,104,205},{104,5,233,182,54},{87,102,92,137,21},{113,114,31,47,90},{101,153,156,172,121}}},
		{{{75,78,95,46,47},{88,69,79,159,186},{30,120,239,139,170},{3,146,104,246,118},{180,76,124,193,155}}}
	}};
	double mur = 1;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {24,43};
	assert( check(test+" Test 58", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{179,107,138,52,120},{65,15,76,133,92},{80,154,37,10,217},{186,124,194,186,205},{181,38,109,83,108}}},
		{{{250,209,106,120,203},{122,209,39,210,20},{39,180,148,155,140},{20,96,98,128,248},{6,74,152,0,48}}},
		{{{252,167,141,110,123},{165,5,67,238,228},{181,131,93,202,21},{158,102,97,240,36},{183,198,104,77,94}}},
		{{{219,154,24,212,1},{223,151,16,25,14},{243,71,84,78,10},{251,188,206,49,235},{36,231,129,14,132}}},
		{{{194,64,151,24,102},{54,99,144,230,143},{226,71,216,97,168},{63,112,21,213,102},{159,146,41,23,225}}}
	}};
	double mur = 55;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {24,21};
	assert( check(test+" Test 59", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{238,206,16,231,25},{229,67,218,43,94},{90,176,250,172,156},{106,149,178,185,210},{164,185,228,45,134}}},
		{{{120,11,217,55,228},{144,202,193,122,105},{218,145,159,191,40},{122,50,60,214,249},{222,135,4,14,250}}},
		{{{153,194,239,111,162},{234,129,237,220,213},{108,106,153,182,133},{181,152,76,145,247},{151,157,246,66,189}}},
		{{{135,112,237,59,47},{251,27,180,34,48},{34,243,43,28,182},{3,38,24,230,181},{40,254,117,219,131}}},
		{{{54,38,112,85,63},{132,242,44,59,45},{129,94,215,73,151},{74,22,87,175,38},{141,73,254,25,180}}}
	}};
	double mur = 177;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,43};
	assert( check(test+" Test 60", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{54,128,249,54,29},{213,124,78,215,38},{127,227,143,218,177},{123,75,217,87,42},{197,86,2,129,123}}},
		{{{179,130,49,70,58},{233,159,53,120,22},{236,31,226,0,213},{5,66,178,42,135},{106,16,10,70,225}}},
		{{{2,229,39,58,115},{141,211,235,71,26},{50,245,14,3,201},{223,21,154,123,8},{185,45,163,78,89}}},
		{{{209,155,168,132,93},{171,159,132,226,133},{87,81,141,181,198},{23,58,141,185,236},{214,123,169,21,91}}},
		{{{106,185,230,127,86},{179,252,94,224,193},{64,242,219,125,120},{52,43,111,187,143},{45,34,195,205,204}}}
	}};
	double mur = 59;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 61", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{109,197,86,51,115},{103,139,230,104,142},{244,253,150,81,112},{108,222,226,50,238},{183,182,105,68,63}}},
		{{{226,40,82,58,45},{115,197,203,32,50},{17,208,53,99,88},{10,216,144,110,89},{56,163,97,96,222}}},
		{{{103,183,246,163,166},{146,102,77,232,139},{217,171,63,148,165},{157,187,186,45,162},{191,112,253,253,129}}},
		{{{188,71,110,136,190},{151,187,43,50,189},{252,90,108,214,29},{177,140,251,170,95},{58,61,225,156,152}}},
		{{{243,71,115,138,55},{152,137,52,229,95},{76,117,204,27,248},{220,234,47,24,197},{140,18,137,104,116}}}
	}};
	double mur = 219;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,43};
	assert( check(test+" Test 62", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{147,96,94,227,222},{8,21,182,104,164},{120,54,170,243,93},{40,26,62,253,67},{105,91,148,147,48}}},
		{{{102,25,186,86,192},{181,77,178,30,10},{110,181,4,222,246},{217,225,47,185,61},{25,235,100,9,18}}},
		{{{44,97,220,4,24},{246,79,207,252,92},{58,122,168,65,131},{51,100,189,96,75},{140,29,57,196,107}}},
		{{{244,227,160,231,183},{237,155,216,39,2},{188,12,154,124,5},{131,135,17,186,14},{243,67,104,158,65}}},
		{{{36,6,238,118,172},{89,89,3,88,44},{181,139,123,113,135},{29,230,33,204,249},{244,247,102,190,42}}}
	}};
	double mur = 83;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,19};
	assert( check(test+" Test 63", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{236,242,155,26,204},{125,185,114,88,57},{68,150,38,24,119},{213,135,91,198,42},{75,71,133,111,29}}},
		{{{212,166,80,129,131},{95,187,213,223,102},{213,65,4,162,220},{41,82,136,140,76},{164,176,34,62,197}}},
		{{{151,154,161,199,136},{160,22,123,127,50},{26,107,192,59,227},{190,73,249,35,252},{163,109,133,235,162}}},
		{{{163,76,28,195,229},{60,19,247,124,158},{104,103,216,242,39},{5,150,59,18,157},{189,197,63,123,92}}},
		{{{136,103,206,157,142},{188,172,24,11,218},{26,86,179,82,124},{214,198,207,75,136},{124,1,180,225,29}}}
	}};
	double mur = 129;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,19};
	assert( check(test+" Test 64", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{14,188,121,139,10},{190,50,234,93,170},{97,70,250,6,59},{179,69,43,174,244},{254,226,68,65,73}}},
		{{{143,176,172,139,127},{100,207,160,189,222},{188,8,27,240,180},{184,4,23,138,29},{252,84,180,113,91}}},
		{{{23,235,170,122,35},{112,73,133,163,215},{219,210,179,51,76},{248,248,96,193,116},{184,70,115,45,227}}},
		{{{229,186,234,166,177},{253,223,167,228,252},{79,170,187,73,75},{195,201,238,116,217},{158,206,28,7,20}}},
		{{{160,41,115,172,139},{35,22,38,248,90},{27,1,207,96,80},{123,137,162,164,123},{35,23,48,31,63}}}
	}};
	double mur = 252;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,23};
	assert( check(test+" Test 65", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{214,199,241,200,146},{15,215,153,7,18},{202,22,142,6,139},{0,149,214,68,251},{200,6,19,211,106}}},
		{{{155,181,251,69,212},{45,155,198,227,230},{244,250,13,219,239},{97,44,48,238,186},{192,115,164,104,13}}},
		{{{244,150,170,168,158},{103,126,167,227,159},{247,85,23,169,155},{90,236,102,1,71},{35,93,85,134,93}}},
		{{{175,16,34,185,41},{177,89,137,186,120},{154,163,216,136,187},{238,134,173,214,17},{131,79,31,139,248}}},
		{{{22,202,139,184,109},{221,37,145,163,72},{134,208,240,213,213},{208,128,246,232,57},{178,90,42,98,146}}}
	}};
	double mur = 165;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 66", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{214,201,179,145,184},{94,248,131,53,150},{26,238,204,166,90},{65,211,229,145,137},{150,253,235,197,76}}},
		{{{113,81,26,13,151},{15,59,149,157,0},{200,129,155,176,32},{140,116,140,231,212},{27,126,128,199,182}}},
		{{{55,155,36,252,90},{73,253,167,116,3},{102,208,216,24,160},{213,65,26,137,233},{20,150,171,215,52}}},
		{{{121,73,210,200,166},{207,44,214,143,219},{65,154,80,210,217},{100,244,97,150,197},{32,57,26,65,64}}},
		{{{98,47,169,22,231},{215,127,210,140,65},{138,197,190,128,74},{69,129,154,203,231},{228,164,72,14,237}}}
	}};
	double mur = 36;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {22,25};
	assert( check(test+" Test 67", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{160,125,114,121,12},{145,181,84,20,44},{135,50,122,2,106},{247,243,232,101,76},{151,69,32,58,50}}},
		{{{96,20,200,29,63},{223,138,192,35,174},{121,76,105,152,40},{174,192,111,217,203},{20,119,31,183,65}}},
		{{{78,195,83,26,16},{134,19,240,28,57},{79,156,144,104,27},{58,49,184,148,172},{228,136,87,115,242}}},
		{{{231,34,59,44,16},{46,224,180,122,119},{199,104,176,10,34},{67,111,142,28,185},{44,191,36,234,78}}},
		{{{108,165,102,239,19},{106,218,57,107,62},{245,162,171,201,229},{4,47,57,182,43},{247,158,6,61,76}}}
	}};
	double mur = 65;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {23,14};
	assert( check(test+" Test 68", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{3,208,180,2,108},{206,31,208,26,184},{73,132,22,24,42},{128,204,127,153,86},{66,168,149,7,172}}},
		{{{202,20,148,202,216},{132,217,161,244,219},{38,40,21,205,117},{43,12,26,121,136},{92,30,74,88,152}}},
		{{{160,33,102,250,62},{69,44,132,238,34},{59,17,9,207,146},{127,118,198,168,231},{91,185,237,43,70}}},
		{{{213,252,242,190,121},{128,43,139,51,102},{42,233,85,142,238},{59,102,154,76,128},{20,21,35,48,205}}},
		{{{199,147,29,249,29},{197,168,57,252,183},{102,215,132,28,71},{181,3,200,23,126},{39,195,31,75,40}}}
	}};
	double mur = 141;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 69", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{210,235,135,226,197},{234,209,226,177,191},{94,180,221,91,186},{244,95,11,92,2},{120,52,198,82,217}}},
		{{{163,218,212,248,66},{137,246,24,199,152},{239,13,229,141,85},{23,68,64,4,76},{202,23,165,154,149}}},
		{{{51,207,5,217,61},{79,126,200,114,89},{244,67,56,8,131},{253,71,0,133,99},{227,243,57,50,27}}},
		{{{54,175,114,215,240},{85,143,231,44,182},{51,224,59,50,169},{110,243,110,141,123},{148,99,230,10,190}}},
		{{{60,50,14,142,207},{179,184,161,140,54},{28,183,228,9,168},{48,106,218,212,226},{172,225,144,126,218}}}
	}};
	double mur = 209;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 70", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{66,254,113,216,105},{83,58,137,155,176},{91,8,29,67,231},{8,56,179,226,32},{173,1,93,70,209}}},
		{{{137,125,170,31,137},{178,116,113,189,66},{90,135,120,91,6},{177,232,238,43,192},{100,115,83,113,133}}},
		{{{239,236,125,125,206},{71,92,73,215,214},{29,155,223,198,132},{72,104,1,94,64},{156,120,93,51,153}}},
		{{{213,7,74,40,172},{237,210,155,64,89},{49,95,196,8,107},{128,77,253,16,124},{106,63,57,56,36}}},
		{{{38,182,236,70,90},{129,63,142,242,97},{177,81,71,2,222},{113,5,144,48,248},{168,114,240,35,192}}}
	}};
	double mur = 140;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,12};
	assert( check(test+" Test 71", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{112,43,12,90,31},{48,190,132,155,0},{202,52,3,238,27},{36,155,42,234,64},{122,121,162,44,211}}},
		{{{96,28,99,77,61},{241,98,252,65,195},{85,76,15,137,248},{43,22,205,53,141},{228,152,212,195,221}}},
		{{{169,230,209,20,46},{38,9,226,77,18},{246,145,77,120,113},{32,61,64,200,38},{217,175,217,233,173}}},
		{{{237,15,95,48,119},{85,178,211,37,154},{42,222,81,15,107},{253,147,68,182,149},{201,8,23,175,72}}},
		{{{57,63,173,173,175},{59,22,83,108,184},{124,137,106,219,220},{234,48,98,28,213},{174,239,77,36,192}}}
	}};
	double mur = 242;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {17,22};
	assert( check(test+" Test 72", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{78,45,186,5,44},{184,29,14,18,47},{246,120,69,150,168},{247,216,101,156,41},{21,187,123,87,187}}},
		{{{57,202,192,206,2},{134,176,26,205,15},{66,225,188,129,89},{91,211,212,207,98},{72,113,170,88,245}}},
		{{{14,195,5,28,79},{69,100,92,221,217},{218,133,77,83,7},{167,158,153,92,254},{182,130,220,223,97}}},
		{{{10,11,167,112,146},{178,140,79,159,188},{9,164,206,235,125},{26,164,174,101,172},{6,90,145,87,116}}},
		{{{8,77,93,193,252},{30,204,233,102,42},{30,166,35,121,249},{55,249,80,78,118},{10,180,205,143,105}}}
	}};
	double mur = 171;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,17};
	assert( check(test+" Test 73", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{35,127,230,130,124},{181,77,206,3,81},{70,9,174,41,248},{141,125,17,112,114},{208,68,60,62,162}}},
		{{{0,158,232,183,243},{131,179,25,152,54},{25,47,246,154,245},{231,115,92,27,9},{72,104,105,228,53}}},
		{{{211,239,89,210,118},{233,212,112,102,75},{193,31,200,47,143},{213,31,117,227,226},{18,235,228,109,20}}},
		{{{200,232,51,201,133},{124,41,66,175,198},{163,36,27,147,203},{31,251,238,125,122},{104,195,189,226,20}}},
		{{{3,130,103,210,241},{39,192,21,34,170},{209,193,70,88,218},{185,99,19,150,180},{218,92,168,182,160}}}
	}};
	double mur = 124;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 74", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{233,6,60,94,80},{83,158,183,35,186},{45,151,52,87,217},{78,209,59,38,102},{158,252,92,43,101}}},
		{{{173,125,130,254,150},{7,140,9,184,208},{229,244,62,189,205},{147,27,228,46,155},{103,134,96,71,152}}},
		{{{86,189,165,27,204},{111,118,43,134,50},{170,153,227,37,116},{32,254,10,246,22},{20,187,166,217,82}}},
		{{{125,140,20,253,155},{232,182,236,60,223},{155,193,122,26,4},{12,253,20,46,152},{62,223,233,147,179}}},
		{{{251,198,172,67,16},{88,134,62,166,50},{201,109,164,83,178},{148,76,68,69,107},{194,23,75,116,66}}}
	}};
	double mur = 79;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,23};
	assert( check(test+" Test 75", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{42,85,136,124,122},{93,139,161,137,144},{89,131,7,164,138},{13,116,178,250,172},{24,184,76,66,167}}},
		{{{218,172,226,73,208},{235,248,56,116,182},{160,38,25,32,129},{7,185,49,88,92},{165,57,188,212,171}}},
		{{{179,125,85,87,192},{111,31,93,161,186},{172,76,164,186,241},{195,4,34,236,0},{207,132,221,230,138}}},
		{{{137,63,201,126,103},{155,196,246,45,86},{15,140,211,129,245},{176,183,60,47,77},{211,21,217,99,60}}},
		{{{197,215,30,203,116},{193,48,217,249,175},{121,60,16,63,225},{43,77,152,46,175},{95,57,27,228,47}}}
	}};
	double mur = 135;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,43};
	assert( check(test+" Test 76", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{77,65,198,53,5},{80,144,135,133,67},{102,222,33,168,218},{139,230,89,110,153},{195,121,128,112,177}}},
		{{{157,87,63,219,4},{121,45,61,189,193},{226,252,169,92,173},{213,71,225,199,62},{1,89,152,119,111}}},
		{{{72,211,233,8,25},{21,232,216,87,31},{72,220,6,60,90},{19,133,78,3,174},{70,1,7,128,252}}},
		{{{184,86,196,104,8},{181,137,2,100,99},{234,197,147,90,124},{209,125,64,213,12},{10,235,30,183,253}}},
		{{{0,235,28,214,198},{189,3,84,254,113},{83,102,19,200,54},{88,239,2,5,38},{144,114,27,101,99}}}
	}};
	double mur = 254;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 77", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{245,5,211,12,54},{236,158,60,30,205},{59,164,100,127,103},{35,234,60,107,40},{251,103,21,252,160}}},
		{{{200,242,7,201,85},{212,2,163,97,194},{131,212,84,126,234},{96,47,215,148,119},{140,152,103,28,7}}},
		{{{164,132,142,110,182},{156,207,199,73,59},{203,147,82,212,123},{102,47,5,0,141},{22,164,112,210,113}}},
		{{{36,233,27,196,28},{127,43,236,202,160},{253,228,252,227,83},{38,209,58,179,250},{242,27,148,155,155}}},
		{{{147,165,241,156,100},{146,135,50,9,76},{170,114,151,162,52},{68,80,185,40,81},{192,105,118,184,100}}}
	}};
	double mur = 173;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {17,17};
	assert( check(test+" Test 78", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{11,83,219,213,96},{99,48,173,214,133},{136,134,210,186,186},{212,13,101,57,95},{158,35,83,252,59}}},
		{{{8,55,113,110,213},{180,22,72,191,189},{53,62,129,150,105},{55,226,140,32,54},{98,128,198,243,250}}},
		{{{218,213,116,110,157},{102,141,210,154,122},{125,33,232,249,156},{62,79,164,45,160},{174,118,174,253,130}}},
		{{{151,26,25,131,162},{33,187,252,63,143},{31,169,74,21,86},{199,241,142,12,145},{210,223,244,108,1}}},
		{{{104,198,202,90,30},{241,219,111,254,239},{209,89,186,246,126},{60,135,215,104,123},{103,20,13,79,35}}}
	}};
	double mur = 85;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {18,19};
	assert( check(test+" Test 79", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{106,225,134,61,11},{43,208,63,185,157},{239,65,88,215,230},{182,158,56,7,190},{94,118,94,62,5}}},
		{{{95,180,67,13,209},{66,243,213,51,8},{167,240,119,216,104},{178,174,217,47,49},{245,154,173,205,39}}},
		{{{10,241,71,156,161},{120,135,138,132,144},{239,9,78,84,215},{250,18,26,187,224},{187,132,58,108,183}}},
		{{{250,11,242,105,85},{99,208,48,62,89},{240,202,60,235,144},{16,20,86,146,2},{100,133,175,149,100}}},
		{{{127,20,28,90,213},{210,180,184,130,120},{96,7,26,103,103},{150,224,130,254,4},{59,117,167,176,49}}}
	}};
	double mur = 21;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,29};
	assert( check(test+" Test 80", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{220,97,77,157,70},{239,230,152,145,78},{208,24,68,165,127},{103,71,19,113,28},{48,194,151,85,196}}},
		{{{32,230,102,142,248},{39,35,142,196,138},{59,243,139,162,185},{110,85,49,243,244},{235,99,100,110,233}}},
		{{{73,5,211,4,46},{129,179,196,75,239},{146,192,80,36,217},{220,68,139,228,11},{75,118,66,40,92}}},
		{{{12,52,117,180,11},{182,35,223,71,133},{67,228,26,103,2},{195,251,31,79,181},{155,53,200,121,141}}},
		{{{79,213,149,189,77},{69,206,46,171,171},{26,213,186,102,59},{6,226,84,73,134},{222,192,9,245,148}}}
	}};
	double mur = 152;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,19};
	assert( check(test+" Test 81", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{53,50,60,153,143},{155,49,127,90,178},{157,95,249,0,166},{78,0,219,178,29},{208,75,196,201,253}}},
		{{{152,239,141,149,154},{152,55,153,41,80},{135,154,69,23,77},{156,221,196,105,227},{59,68,214,43,232}}},
		{{{108,215,22,90,232},{185,122,40,13,214},{73,130,108,21,30},{179,202,44,181,7},{118,95,68,9,22}}},
		{{{86,165,1,52,10},{221,124,237,112,167},{137,215,160,209,238},{141,49,54,80,100},{197,69,1,6,68}}},
		{{{42,217,76,63,106},{246,39,125,104,223},{13,100,91,239,75},{249,192,79,223,42},{33,23,91,189,143}}}
	}};
	double mur = 155;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {23,23};
	assert( check(test+" Test 82", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{188,56,76,68,207},{12,116,222,4,161},{234,26,165,80,125},{93,175,41,85,171},{155,60,189,54,222}}},
		{{{165,231,208,12,128},{17,14,82,210,69},{91,34,44,213,206},{194,128,240,120,58},{100,148,111,88,243}}},
		{{{22,163,65,119,157},{116,172,68,241,220},{96,219,149,59,30},{30,236,212,239,240},{153,8,137,180,17}}},
		{{{182,240,243,188,24},{45,248,215,141,171},{63,234,134,108,93},{183,203,158,2,253},{130,219,218,201,129}}},
		{{{23,188,102,92,84},{117,104,224,52,36},{107,230,220,17,157},{26,39,165,9,175},{100,45,191,207,115}}}
	}};
	double mur = 217;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {24,17};
	assert( check(test+" Test 83", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{46,227,55,197,54},{137,214,94,94,92},{4,37,97,98,223},{210,92,164,25,117},{251,104,189,201,102}}},
		{{{230,105,183,123,39},{74,85,232,7,124},{229,164,137,8,70},{7,188,91,140,231},{57,33,146,213,147}}},
		{{{198,101,208,2,170},{87,87,5,65,73},{190,139,181,26,47},{201,106,178,173,62},{135,14,83,19,168}}},
		{{{78,188,75,200,78},{205,145,2,254,86},{189,103,103,47,43},{72,11,26,101,63},{120,14,151,34,173}}},
		{{{14,244,250,166,133},{204,219,43,35,13},{140,189,63,83,151},{93,107,245,96,46},{102,19,142,30,234}}}
	}};
	double mur = 195;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {19,22};
	assert( check(test+" Test 84", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{0,143,90,90,158},{250,233,247,96,110},{110,235,43,31,190},{247,192,128,11,108},{30,226,172,197,167}}},
		{{{186,113,225,66,118},{252,190,111,112,19},{17,224,148,196,190},{250,236,56,211,81},{9,63,182,123,100}}},
		{{{117,80,27,194,143},{235,107,229,115,22},{59,139,190,72,57},{207,104,132,233,160},{99,150,220,243,159}}},
		{{{150,164,43,223,21},{55,100,70,3,29},{129,100,83,184,231},{188,128,54,24,42},{19,134,87,61,221}}},
		{{{221,1,252,15,238},{89,16,209,98,12},{216,109,248,51,239},{26,250,185,81,219},{243,61,96,201,182}}}
	}};
	double mur = 160;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 85", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{99,186,107,66,203},{208,15,94,47,19},{45,92,143,97,200},{237,165,142,192,47},{250,104,34,148,58}}},
		{{{108,187,60,179,156},{11,218,107,43,21},{18,156,190,58,161},{31,68,50,254,138},{186,199,163,158,201}}},
		{{{21,85,38,231,179},{185,106,56,175,152},{190,54,214,115,105},{65,146,217,7,7},{0,146,0,69,1}}},
		{{{116,40,219,18,166},{228,99,212,39,204},{232,63,153,235,200},{229,53,138,8,182},{150,159,51,80,87}}},
		{{{203,77,129,226,253},{195,72,236,43,122},{55,41,27,137,13},{65,209,144,169,144},{171,238,206,200,182}}}
	}};
	double mur = 175;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,16};
	assert( check(test+" Test 86", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{33,230,199,187,151},{206,9,98,22,222},{115,227,240,13,133},{5,99,178,167,205},{207,239,45,160,93}}},
		{{{33,78,160,34,111},{225,151,152,213,119},{149,175,244,42,159},{205,173,5,90,24},{95,115,5,133,122}}},
		{{{155,187,141,27,176},{8,224,109,166,64},{241,53,155,144,8},{163,211,175,186,230},{243,200,175,195,215}}},
		{{{13,168,180,28,40},{68,72,21,94,226},{118,35,45,137,253},{77,138,205,90,129},{2,248,76,127,118}}},
		{{{234,205,148,148,189},{134,45,57,204,21},{80,58,66,246,142},{245,27,217,127,45},{249,192,177,95,20}}}
	}};
	double mur = 174;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,43};
	assert( check(test+" Test 87", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{246,23,224,212,181},{138,232,73,170,180},{180,192,217,31,116},{125,116,235,227,175},{55,85,24,17,232}}},
		{{{46,130,0,146,91},{187,71,200,190,61},{17,212,174,167,136},{196,208,203,145,199},{247,72,126,97,214}}},
		{{{166,247,245,119,238},{66,39,136,46,96},{5,139,85,29,75},{209,95,131,163,40},{69,140,100,5,221}}},
		{{{138,144,134,218,27},{179,185,192,177,71},{39,100,249,132,19},{64,2,89,5,86},{185,163,242,179,156}}},
		{{{18,235,118,82,177},{223,148,142,92,175},{44,2,77,206,165},{164,193,191,76,84},{60,63,197,232,253}}}
	}};
	double mur = 216;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {23,19};
	assert( check(test+" Test 88", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{7,122,207,90,138},{85,251,244,72,35},{73,111,77,60,187},{171,168,208,188,84},{231,173,138,70,124}}},
		{{{88,36,63,209,80},{162,60,169,124,31},{152,190,30,234,58},{115,235,60,54,120},{109,245,83,251,30}}},
		{{{37,191,185,204,64},{172,245,178,251,110},{135,236,12,162,67},{187,139,118,105,170},{80,99,62,26,144}}},
		{{{94,55,56,228,113},{167,16,20,254,151},{145,52,161,218,181},{143,250,158,151,19},{184,157,40,16,154}}},
		{{{215,244,129,25,46},{218,57,0,241,53},{112,78,60,210,221},{142,196,196,163,190},{143,164,62,23,105}}}
	}};
	double mur = 105;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,19};
	assert( check(test+" Test 89", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{145,180,29,100,101},{58,139,81,188,188},{71,127,34,64,116},{220,62,162,229,1},{168,58,242,98,7}}},
		{{{6,217,179,214,156},{191,28,94,187,32},{98,240,120,224,20},{92,87,31,171,179},{148,178,112,214,63}}},
		{{{120,236,176,212,109},{248,161,252,217,2},{149,61,36,193,28},{215,239,18,177,223},{239,185,49,37,13}}},
		{{{174,178,219,239,212},{224,139,4,25,144},{133,209,239,187,33},{205,77,109,54,212},{103,159,1,65,74}}},
		{{{241,78,187,112,64},{154,39,248,106,104},{64,171,238,185,165},{149,195,175,64,4},{111,198,28,30,193}}}
	}};
	double mur = 39;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {24,22};
	assert( check(test+" Test 90", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{176,113,74,20,244},{67,158,55,39,125},{223,207,74,169,189},{10,146,28,84,232},{185,48,81,185,4}}},
		{{{245,206,77,58,85},{152,127,105,222,93},{110,37,222,184,145},{193,92,38,10,140},{128,102,202,247,90}}},
		{{{44,85,250,99,110},{52,15,162,247,143},{142,13,116,199,96},{127,185,114,98,11},{139,160,27,234,250}}},
		{{{165,65,60,126,83},{124,86,0,190,158},{39,37,31,219,8},{196,5,94,47,108},{217,94,139,113,68}}},
		{{{6,189,66,120,67},{164,199,120,34,83},{243,179,187,156,48},{110,78,163,145,131},{25,9,243,135,177}}}
	}};
	double mur = 215;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,23};
	assert( check(test+" Test 91", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{162,158,10,154,136},{191,241,72,137,64},{51,83,142,254,207},{142,87,46,236,99},{67,99,244,12,156}}},
		{{{42,167,183,43,66},{169,167,83,23,84},{13,75,156,189,30},{99,132,131,148,130},{37,70,17,252,20}}},
		{{{146,246,171,36,121},{165,5,64,81,196},{126,233,51,34,204},{248,142,244,221,254},{106,237,191,60,83}}},
		{{{253,96,103,26,155},{228,122,236,16,143},{65,174,11,22,235},{206,93,88,192,63},{184,67,216,165,112}}},
		{{{150,3,201,212,212},{166,6,229,13,220},{214,220,52,164,34},{162,131,25,177,138},{230,12,44,89,171}}}
	}};
	double mur = 114;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,43};
	assert( check(test+" Test 92", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{163,34,230,186,72},{1,252,85,52,162},{210,77,212,251,226},{223,20,53,190,13},{80,83,20,150,182}}},
		{{{149,85,245,244,11},{175,12,130,89,7},{216,202,121,125,189},{72,204,54,252,46},{235,251,106,61,91}}},
		{{{104,60,194,148,222},{46,221,130,161,57},{91,200,33,14,103},{36,10,96,50,51},{201,191,250,240,247}}},
		{{{230,139,85,113,224},{119,230,153,100,132},{206,233,10,98,233},{73,31,180,252,114},{112,165,112,166,37}}},
		{{{108,182,178,136,137},{130,209,248,79,175},{60,108,56,225,98},{220,79,209,225,215},{74,113,213,177,165}}}
	}};
	double mur = 241;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,28};
	assert( check(test+" Test 93", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{94,189,223,46,222},{169,10,130,114,15},{22,92,175,119,6},{118,121,225,25,56},{26,125,169,19,226}}},
		{{{18,119,182,190,165},{173,180,214,100,87},{242,103,126,58,126},{112,134,56,7,83},{162,132,232,194,67}}},
		{{{9,233,53,106,140},{172,50,243,177,22},{69,71,230,145,220},{232,52,247,94,104},{230,131,210,219,90}}},
		{{{148,46,134,48,239},{152,50,87,79,182},{116,165,167,229,32},{70,132,19,229,2},{225,88,137,126,44}}},
		{{{199,132,159,52,68},{169,159,115,48,237},{206,81,65,223,184},{197,200,179,10,247},{43,122,26,241,234}}}
	}};
	double mur = 249;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {20,15};
	assert( check(test+" Test 94", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{147,37,31,81,101},{81,40,199,147,99},{119,209,182,6,112},{217,144,225,148,94},{183,179,228,173,63}}},
		{{{27,180,137,254,144},{80,54,241,145,15},{144,177,21,50,208},{239,191,237,169,212},{148,217,88,66,11}}},
		{{{10,247,98,73,116},{116,14,14,143,101},{51,113,128,43,165},{160,49,232,148,109},{131,215,74,71,133}}},
		{{{3,96,15,58,101},{216,65,110,216,143},{248,61,38,33,141},{19,90,26,196,4},{192,134,39,29,6}}},
		{{{212,176,154,168,52},{195,5,218,24,198},{206,74,116,246,79},{75,34,96,62,164},{1,124,174,47,114}}}
	}};
	double mur = 185;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {43,29};
	assert( check(test+" Test 95", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{248,6,228,196,154},{223,20,125,54,65},{119,103,164,90,98},{63,225,29,60,24},{218,246,168,120,223}}},
		{{{171,224,139,94,221},{136,165,188,82,240},{207,73,246,78,218},{27,97,66,150,27},{53,114,236,204,107}}},
		{{{20,54,52,119,110},{27,39,207,175,179},{48,238,199,134,35},{242,158,84,54,240},{42,166,160,212,178}}},
		{{{199,217,31,41,166},{60,251,142,41,212},{246,75,100,125,208},{61,100,209,130,60},{33,54,60,56,105}}},
		{{{220,229,39,133,47},{106,140,22,210,84},{197,214,213,126,45},{155,224,51,221,62},{123,49,66,68,24}}}
	}};
	double mur = 191;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {23,43};
	assert( check(test+" Test 96", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{33,112,113,83,205},{251,236,117,140,225},{29,39,181,224,203},{107,209,158,168,252},{215,5,170,72,75}}},
		{{{213,176,32,79,5},{196,247,159,241,125},{123,113,242,169,78},{229,140,14,160,240},{173,141,82,161,151}}},
		{{{126,136,237,181,180},{78,155,42,244,136},{53,174,206,62,177},{163,223,13,141,91},{120,27,68,107,78}}},
		{{{249,14,108,81,236},{83,213,249,187,161},{45,75,102,246,106},{130,83,207,183,143},{155,171,49,169,85}}},
		{{{220,123,125,167,3},{209,37,87,84,74},{102,252,48,83,221},{56,98,132,62,44},{215,114,168,12,22}}}
	}};
	double mur = 244;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {21,19};
	assert( check(test+" Test 97", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{185,109,24,248,136},{113,229,201,242,162},{196,152,152,217,104},{75,204,249,182,147},{184,188,77,57,231}}},
		{{{153,174,8,124,217},{1,253,22,104,51},{141,52,101,245,103},{116,92,171,7,154},{85,106,119,123,119}}},
		{{{133,55,94,193,106},{152,224,181,246,48},{141,206,175,152,135},{105,200,24,143,46},{119,157,143,181,17}}},
		{{{52,146,30,11,81},{226,165,184,134,115},{33,160,28,72,83},{93,206,26,77,51},{170,132,126,32,86}}},
		{{{20,209,80,119,243},{217,20,176,127,187},{208,25,169,11,4},{161,231,203,152,45},{173,40,79,25,58}}}
	}};
	double mur = 232;
	int V = 4;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {24,18};
	assert( check(test+" Test 98", LBPcode, truth) );
}
{
	Array3D<int,5,5,5> array = {{
		{{{205,36,5,127,173},{74,137,55,227,25},{58,141,62,133,236},{102,36,6,73,29},{231,130,254,139,52}}},
		{{{0,144,159,175,17},{178,157,112,161,130},{240,86,74,5,84},{248,218,113,159,35},{34,17,82,38,229}}},
		{{{188,225,187,247,163},{43,107,128,105,214},{235,1,21,247,205},{118,171,151,166,29},{74,219,73,174,207}}},
		{{{0,70,162,204,46},{47,210,214,214,117},{94,197,87,240,170},{169,182,24,81,7},{56,36,27,181,253}}},
		{{{47,113,101,78,33},{247,251,152,246,102},{41,100,158,23,232},{196,186,35,68,234},{96,34,211,214,198}}}
	}};
	double mur = 81;
	int V = 3;
	NI_RD_LBP<P42g,R2> lbp(mur, V);
	Array1D<int,2> LBPcode = lbp.convert(array);
	Array1D<int,2> truth = {23,43};
	assert( check(test+" Test 99", LBPcode, truth) );
}
}
